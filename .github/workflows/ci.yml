name: ci
on:
  push:
    branches:
      - main
<<<<<<< HEAD
=======
  workflow_dispatch:
>>>>>>> origin/docs-demo
permissions:
  contents: write
jobs:
  update-contributors:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install requests  # Add any other dependencies your script needs

      - name: Run the Python script to fetch contributor data
        run: |
          python .github/scripts/contributions_historical.py

      - name: Amend commit with updated contributor data
        run: |
          # Configure Git user for this action
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@users.noreply.github.com"
          
          # Stage the changes to contributions.json
          git add docs/contributions.json
          git commit -m "Update contributor metrics"
          
          # Push contributor data
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  deploy:
    runs-on: ubuntu-latest
    needs: update-contributors  # This ensures the deploy job waits for update-contributors to finish
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}
          path: .cache
      - run: pip install mkdocs-material
      - run: pip install mkdocs-roamlinks-plugin
      - run: pip install mkdocs-rss-plugin

      # First, build the site (creates the "site/" directory)
      - run: mkdocs build

      # Now, copy the JSON file into the built site directory
      - run: cp docs/contributions.json site/

      # Finally, deploy to GitHub Pages (writes ssg site to gh-pages branch)
      - run: mkdocs gh-deploy --force
